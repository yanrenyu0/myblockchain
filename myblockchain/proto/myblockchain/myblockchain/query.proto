syntax = "proto3";

package myblockchain.myblockchain;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "myblockchain/myblockchain/params.proto";
import "myblockchain/myblockchain/resource.proto";

option go_package = "myblockchain/x/myblockchain/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/myblockchain/myblockchain/params";
  
  }
  
  // Queries a list of ShowResource items.
  rpc ShowResource (QueryShowResourceRequest) returns (QueryShowResourceResponse) {
    option (google.api.http).get = "/myblockchain/myblockchain/show_resource/{id}";
  
  }
  
  // Queries a list of ListResource items.
  rpc ListResource (QueryListResourceRequest) returns (QueryListResourceResponse) {
    option (google.api.http).get = "/myblockchain/myblockchain/list_resource";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryShowResourceRequest {
  uint64 id = 1;
}

message QueryShowResourceResponse {
  Resource resource = 1 [(gogoproto.nullable) = false];
}

message QueryListResourceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListResourceResponse {
  repeated Resource resource   = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

